var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(g,a,d){g!=Array.prototype&&g!=Object.prototype&&(g[a]=d.value)};
$jscomp.getGlobal=function(g){g=["object"==typeof globalThis&&globalThis,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global,g];for(var a=0;a<g.length;++a){var d=g[a];if(d&&d.Math==Math)return d}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(g,a,d,b){if(a){d=$jscomp.global;g=g.split(".");for(b=0;b<g.length-1;b++){var f=g[b];f in d||(d[f]={});d=d[f]}g=g[g.length-1];b=d[g];a=a(b);a!=b&&null!=a&&$jscomp.defineProperty(d,g,{configurable:!0,writable:!0,value:a})}};$jscomp.polyfill("String.prototype.trimLeft",function(g){function a(){return this.replace(/^[\s\xa0]+/,"")}return g||a},"es_2019","es3");
THREE.OBJLoader=function(g){this.manager=void 0!==g?g:THREE.DefaultLoadingManager;this.materials=null;this.regexp={vertex_pattern:/^v\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,normal_pattern:/^vn\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,uv_pattern:/^vt\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,face_vertex:/^f\s+(-?\d+)\s+(-?\d+)\s+(-?\d+)(?:\s+(-?\d+))?/,face_vertex_uv:/^f\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+))?/,
face_vertex_uv_normal:/^f\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+)\/(-?\d+))?/,face_vertex_normal:/^f\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)(?:\s+(-?\d+)\/\/(-?\d+))?/,object_pattern:/^[og]\s*(.+)?/,smoothing_pattern:/^s\s+(\d+|on|off)/,material_library_pattern:/^mtllib /,material_use_pattern:/^usemtl /}};
THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(g,a,d,b){var f=this,e=new THREE.XHRLoader(f.manager);e.setPath(this.path);e.load(g,function(c){a(f.parse(c))},d,b)},setPath:function(g){this.path=g},setMaterials:function(g){this.materials=g},_createParserState:function(){var g={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(a,d){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=a,void(this.object.fromDeclaration=
!1!==d);this.object&&"function"==typeof this.object._finalize&&this.object._finalize();var b=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object={name:a||"",fromDeclaration:!1!==d,geometry:{vertices:[],normals:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(a,b){var c=this._finalize(!1);c&&(c.inherited||0>=c.groupCount)&&this.materials.splice(c.index,1);a={index:this.materials.length,name:a||"",mtllib:Array.isArray(b)&&0<b.length?
b[b.length-1]:"",smooth:void 0!==c?c.smooth:this.smooth,groupStart:void 0!==c?c.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(a){return{index:"number"==typeof a?a:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:this.groupEnd,groupEnd:-1,groupCount:-1,inherited:!1}}};return this.materials.push(a),a},currentMaterial:function(){if(0<this.materials.length)return this.materials[this.materials.length-1]},_finalize:function(a){var b=this.currentMaterial();return b&&
-1===b.groupEnd&&(b.groupEnd=this.geometry.vertices.length/3,b.groupCount=b.groupEnd-b.groupStart,b.inherited=!1),!1!==a&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),b}},b&&b.name&&"function"==typeof b.clone)a=b.clone(0),a.inherited=!0,this.object.materials.push(a);this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize()},parseVertexIndex:function(a,d){a=parseInt(a,10);return 3*(0<=a?a-1:a+d/
3)},parseNormalIndex:function(a,d){a=parseInt(a,10);return 3*(0<=a?a-1:a+d/3)},parseUVIndex:function(a,d){a=parseInt(a,10);return 2*(0<=a?a-1:a+d/2)},addVertex:function(a,d,b){var f=this.vertices,e=this.object.geometry.vertices;e.push(f[a+0]);e.push(f[a+1]);e.push(f[a+2]);e.push(f[d+0]);e.push(f[d+1]);e.push(f[d+2]);e.push(f[b+0]);e.push(f[b+1]);e.push(f[b+2])},addVertexLine:function(a){var d=this.vertices,b=this.object.geometry.vertices;b.push(d[a+0]);b.push(d[a+1]);b.push(d[a+2])},addNormal:function(a,
d,b){var f=this.normals,e=this.object.geometry.normals;e.push(f[a+0]);e.push(f[a+1]);e.push(f[a+2]);e.push(f[d+0]);e.push(f[d+1]);e.push(f[d+2]);e.push(f[b+0]);e.push(f[b+1]);e.push(f[b+2])},addUV:function(a,d,b){var f=this.uvs,e=this.object.geometry.uvs;e.push(f[a+0]);e.push(f[a+1]);e.push(f[d+0]);e.push(f[d+1]);e.push(f[b+0]);e.push(f[b+1])},addUVLine:function(a){var d=this.uvs,b=this.object.geometry.uvs;b.push(d[a+0]);b.push(d[a+1])},addFace:function(a,d,b,f,e,c,g,r,k,n,m,q){var l,h=this.vertices.length;
a=this.parseVertexIndex(a,h);d=this.parseVertexIndex(d,h);b=this.parseVertexIndex(b,h);if(void 0===f?this.addVertex(a,d,b):(l=this.parseVertexIndex(f,h),this.addVertex(a,d,l),this.addVertex(d,b,l)),void 0!==e)h=this.uvs.length,a=this.parseUVIndex(e,h),d=this.parseUVIndex(c,h),b=this.parseUVIndex(g,h),void 0===f?this.addUV(a,d,b):(l=this.parseUVIndex(r,h),this.addUV(a,d,l),this.addUV(d,b,l));void 0!==k&&(e=this.normals.length,a=this.parseNormalIndex(k,e),d=k===n?a:this.parseNormalIndex(n,e),b=k===
m?a:this.parseNormalIndex(m,e),void 0===f?this.addNormal(a,d,b):(l=this.parseNormalIndex(q,e),this.addNormal(a,d,l),this.addNormal(d,b,l)))},addLineGeometry:function(a,d){this.object.geometry.type="Line";for(var b=this.vertices.length,f=this.uvs.length,e=0,c=a.length;e<c;e++)this.addVertexLine(this.parseVertexIndex(a[e],b));a=0;for(c=d.length;a<c;a++)this.addUVLine(this.parseUVIndex(d[a],f))}};return g.startObject("",!1),g},parse:function(g){console.time("OBJLoader");var a=this._createParserState();
-1!==g.indexOf("\r\n")&&(g=g.replace("\r\n","\n"));var d=g.split("\n"),b="",f="",e,c=[],p="function"==typeof"".trimLeft;g=0;for(var r=d.length;g<r;g++)if(b=d[g],0!==(b=p?b.trimLeft():b.trim()).length&&"#"!==(f=b.charAt(0)))if("v"===f)if(" "===(e=b.charAt(1))&&null!==(c=this.regexp.vertex_pattern.exec(b)))a.vertices.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3]));else if("n"===e&&null!==(c=this.regexp.normal_pattern.exec(b)))a.normals.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3]));
else{if("t"!==e||null===(c=this.regexp.uv_pattern.exec(b)))throw Error("Unexpected vertex/normal/uv line: '"+b+"'");a.uvs.push(parseFloat(c[1]),parseFloat(c[2]))}else if("f"===f)if(null!==(c=this.regexp.face_vertex_uv_normal.exec(b)))a.addFace(c[1],c[4],c[7],c[10],c[2],c[5],c[8],c[11],c[3],c[6],c[9],c[12]);else if(null!==(c=this.regexp.face_vertex_uv.exec(b)))a.addFace(c[1],c[3],c[5],c[7],c[2],c[4],c[6],c[8]);else if(null!==(c=this.regexp.face_vertex_normal.exec(b)))a.addFace(c[1],c[3],c[5],c[7],
void 0,void 0,void 0,void 0,c[2],c[4],c[6],c[8]);else{if(null===(c=this.regexp.face_vertex.exec(b)))throw Error("Unexpected face line: '"+b+"'");a.addFace(c[1],c[2],c[3],c[4])}else if("l"===f){e=b.substring(1).trim().split(" ");var k=[],n=[];if(-1===b.indexOf("/"))k=e;else for(var m=0,q=e.length;m<q;m++){var l=e[m].split("/");""!==l[0]&&k.push(l[0]);""!==l[1]&&n.push(l[1])}a.addLineGeometry(k,n)}else if(null!==(c=this.regexp.object_pattern.exec(b)))e=c[0].substr(1).trim(),a.startObject(e);else if(this.regexp.material_use_pattern.test(b))a.object.startMaterial(b.substring(7).trim(),
a.materialLibraries);else if(this.regexp.material_library_pattern.test(b))a.materialLibraries.push(b.substring(7).trim());else{if(null===(c=this.regexp.smoothing_pattern.exec(b))){if("\x00"===b)continue;throw Error("Unexpected line: '"+b+"'");}e=c[1].trim().toLowerCase();a.object.smooth="1"===e||"on"===e;(h=a.object.currentMaterial())&&(h.smooth=a.object.smooth)}a.finalize();d=new THREE.Group;d.materialLibraries=[].concat(a.materialLibraries);g=0;for(r=a.objects.length;g<r;g++)if(b=a.objects[g],h=
b.geometry,p=b.materials,f="Line"===h.type,0!==h.vertices.length){c=new THREE.BufferGeometry;c.addAttribute("position",new THREE.BufferAttribute(new Float32Array(h.vertices),3));0<h.normals.length?c.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(h.normals),3)):c.computeVertexNormals();0<h.uvs.length&&c.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(h.uvs),2));e=[];k=0;for(n=p.length;k<n;k++){m=p[k];var h=void 0;null===this.materials||(h=this.materials.create(m.name),
!f||!h||h instanceof THREE.LineBasicMaterial)||(q=new THREE.LineBasicMaterial,q.copy(h),h=q);h||((h=f?new THREE.LineBasicMaterial:new THREE.MeshPhongMaterial).name=m.name);h.shading=m.smooth?THREE.SmoothShading:THREE.FlatShading;e.push(h)}if(1<e.length){k=0;for(n=p.length;k<n;k++)m=p[k],c.addGroup(m.groupStart,m.groupCount,k);h=new THREE.MultiMaterial(e);h=f?new THREE.Line(c,h):new THREE.Mesh(c,h)}else h=f?new THREE.Line(c,e[0]):new THREE.Mesh(c,e[0]);h.name=b.name;d.add(h)}return console.timeEnd("OBJLoader"),
d}};
