{
  "modules": [
    "atlas",
    "behavior_tree",
    "message_generators",
    "navigation",
    "otg5",
    "planner_cost",
    "utils"
  ],
  "graph": {
    "nodes": [
      {
        "name": "interface",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "subgraph",
            "type": "isaac::alice::Subgraph"
          }
        ]
      },
      {
        "name": "navigation",
        "subgraph": "packages/navigation/apps/differential_base_navigation.subgraph.json"
      },
      {
        "name": "otg5",
        "subgraph": "packages/otg5/apps/otg5_straight_differential_base.subgraph.json"
      },
      {
        "name": "detection_pose_estimation",
        "subgraph": "packages/object_pose_estimation/apps/pose_cnn_decoder/detection_pose_estimation_cnn_inference.subgraph.json"
      },
      {
        "name": "roi_pose_initializer",
        "start_order": -200,
        "components": [
          {
            "name": "PoseInitializer",
            "type": "isaac::alice::PoseInitializer"
          }
        ]
      },
      {
        "name": "drive_under_dolly_pose_initializer",
        "start_order": -200,
        "components": [
          {
            "name": "PoseInitializer",
            "type": "isaac::alice::PoseInitializer"
          }
        ]
      },
      {
        "name": "drive_out_dolly_pose_initializer",
        "start_order": -200,
        "components": [
          {
            "name": "PoseInitializer",
            "type": "isaac::alice::PoseInitializer"
          }
        ]
      },
      {
        "name": "sequence_behavior",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "MemorySequenceBehavior",
            "type": "isaac::behavior_tree::MemorySequenceBehavior"
          }
        ]
      },
      {
        "name": "delivery_mission",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "MemorySequenceBehavior",
            "type": "isaac::behavior_tree::MemorySequenceBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_without_dolly",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_for_planner_graph_without_dolly",
        "components": [
          {
            "name": "ConfigLoader",
            "type": "isaac::alice::ConfigLoader"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_before_docking",
        "components": [
          {
            "name": "ConfigLoader",
            "type": "isaac::alice::ConfigLoader"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_before_undocking",
        "components": [
          {
            "name": "ConfigLoader",
            "type": "isaac::alice::ConfigLoader"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "approach_dolly_pickup",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "goal_approach_dolly_pickup",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "MapWaypointAsGoal",
            "type": "isaac::navigation::MapWaypointAsGoal"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "detect_dolly",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "detections_filter",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "Detections3Filter",
            "type": "isaac::utils::Detections3Filter"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "detections_to_pose_tree",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "DetectionsToPoseTree",
            "type": "isaac::utils::DetectionsToPoseTree"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "target_dolly_viewer",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "ObjectViewer",
            "type": "isaac::viewers::ObjectViewer"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "detection_timer",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "TimerBehavior",
            "type": "isaac::behavior_tree::TimerBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drive_under_dolly",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "goal_drive_under_dolly",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "PoseAsGoal",
            "type": "isaac::navigation::PoseAsGoal"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "plan_to_under_dolly",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "Plan2Generator",
            "type": "isaac::message_generators::Plan2Generator"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "dolly_wheels_as_static_obstacle",
        "components": [
          {
            "name": "wheel_1",
            "type": "isaac::navigation::TemporaryObstacle"
          },
          {
            "name": "wheel_2",
            "type": "isaac::navigation::TemporaryObstacle"
          },
          {
            "name": "wheel_3",
            "type": "isaac::navigation::TemporaryObstacle"
          },
          {
            "name": "wheel_4",
            "type": "isaac::navigation::TemporaryObstacle"
          },
          {
            "name": "wheel_1_cost",
            "type": "isaac::planner_cost::ObstacleDistanceBuilder"
          },
          {
            "name": "wheel_2_cost",
            "type": "isaac::planner_cost::ObstacleDistanceBuilder"
          },
          {
            "name": "wheel_3_cost",
            "type": "isaac::planner_cost::ObstacleDistanceBuilder"
          },
          {
            "name": "wheel_4_cost",
            "type": "isaac::planner_cost::ObstacleDistanceBuilder"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "lift_dolly",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "lift_command",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "DifferentialBaseControlGenerator",
            "type": "isaac::message_generators::DifferentialBaseControlGenerator"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "lift_timer",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "TimerBehavior",
            "type": "isaac::behavior_tree::TimerBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_with_dolly",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_for_robot_shape_with_dolly",
        "components": [
          {
            "name": "ConfigLoader",
            "type": "isaac::alice::ConfigLoader"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_for_planner_graph_with_dolly",
        "components": [
          {
            "name": "ConfigLoader",
            "type": "isaac::alice::ConfigLoader"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_after_docking",
        "components": [
          {
            "name": "ConfigLoader",
            "type": "isaac::alice::ConfigLoader"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_after_undocking",
        "components": [
          {
            "name": "ConfigLoader",
            "type": "isaac::alice::ConfigLoader"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "dolly_pose_on_robot",
        "components": [
          {
            "name": "PoseTreeRelink",
            "type": "isaac::atlas::PoseTreeRelink"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drive_back_with_dolly_pose_initializer",
        "components": [
          {
            "name": "PoseInitializer",
            "type": "isaac::alice::PoseInitializer"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drive_back_with_dolly_pose_in_world",
        "components": [
          {
            "name": "PoseTreeRelink",
            "type": "isaac::atlas::PoseTreeRelink"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drive_back_with_dolly",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "goal_drive_back_with_dolly",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "PoseAsGoal",
            "type": "isaac::navigation::PoseAsGoal"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "plan_back_with_dolly",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "Plan2Generator",
            "type": "isaac::message_generators::Plan2Generator"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drive_to_dolly_dropoff",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drive_back_with_dolly_pose_in_dolly",
        "components": [
          {
            "name": "PoseTreeRelink",
            "type": "isaac::atlas::PoseTreeRelink"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "goal_drive_to_dolly_dropoff",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "MapWaypointAsGoal",
            "type": "isaac::navigation::MapWaypointAsGoal"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drop_dolly",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drop_command",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "DifferentialBaseControlGenerator",
            "type": "isaac::message_generators::DifferentialBaseControlGenerator"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drop_timer",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "TimerBehavior",
            "type": "isaac::behavior_tree::TimerBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "config_for_robot_shape_without_dolly",
        "components": [
          {
            "name": "ConfigLoader",
            "type": "isaac::alice::ConfigLoader"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "dolly_pose_in_world",
        "components": [
          {
            "name": "PoseTreeRelink",
            "type": "isaac::atlas::PoseTreeRelink"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drive_out_from_under_dolly",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "remove_dolly",
        "components": [
          {
            "name": "PoseTreeRemoveLink",
            "type": "isaac::atlas::PoseTreeRemoveLink"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "goal_drive_out_from_under_dolly",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "PoseAsGoal",
            "type": "isaac::navigation::PoseAsGoal"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "plan_to_out_dolly",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "Plan2Generator",
            "type": "isaac::message_generators::Plan2Generator"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "drive_home",
        "components": [
          {
            "name": "NodeGroup",
            "type": "isaac::behavior_tree::NodeGroup"
          },
          {
            "name": "ParallelBehavior",
            "type": "isaac::behavior_tree::ParallelBehavior"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "goal_drive_home",
        "components": [
          {
            "name": "MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "MapWaypointAsGoal",
            "type": "isaac::navigation::MapWaypointAsGoal"
          }
        ],
        "disable_automatic_start": true
      },
      {
        "name": "sight_widgets",
        "components": [
          {
            "type": "isaac::sight::SightWidget",
            "name": "Camera View"
          }
        ]
      }
    ],
    "edges": [
      {
        "source": "interface/subgraph/color",
        "target": "detection_pose_estimation.interface/Subgraph/color"
      },
      {
        "source": "interface/subgraph/intrinsics",
        "target": "detection_pose_estimation.interface/Subgraph/intrinsics"
      },
      {
        "source": "detection_pose_estimation.interface/Subgraph/output_poses",
        "target": "detections_filter/Detections3Filter/detections_in"
      },
      {
        "source": "detections_filter/Detections3Filter/detections_out",
        "target": "detections_to_pose_tree/DetectionsToPoseTree/detections"
      },
      {
        "source": "interface/subgraph/flatscan",
        "target": "navigation.subgraph/interface/flatscan_for_localization"
      },
      {
        "source": "interface/subgraph/flatscan_2",
        "target": "navigation.subgraph/interface/flatscan_2_for_localization"
      },
      {
        "source": "interface/subgraph/flatscan",
        "target": "navigation.subgraph/interface/flatscan_for_obstacles"
      },
      {
        "source": "interface/subgraph/flatscan_2",
        "target": "navigation.subgraph/interface/flatscan_2_for_obstacles"
      },
      {
        "source": "interface/subgraph/base_state",
        "target": "navigation.subgraph/interface/state"
      },
      {
        "source": "interface/subgraph/imu_raw",
        "target": "navigation.subgraph/interface/imu_raw"
      },
      {
        "source": "navigation.subgraph/interface/command",
        "target": "interface/subgraph/base_command"
      },
      {
        "source": "goal_approach_dolly_pickup/MapWaypointAsGoal/goal",
        "target": "navigation.subgraph/interface/goal"
      },
      {
        "source": "navigation.imu_odometry.subgraph/interface/odometry",
        "target": "otg5.subgraph/interface/odometry"
      },
      {
        "source": "goal_drive_under_dolly/PoseAsGoal/goal",
        "target": "navigation.subgraph/interface/goal"
      },
      {
        "source": "otg5.subgraph/interface/plan",
        "target": "navigation.control.trajectory_validation/TrajectoryValidation/trajectory"
      },
      {
        "source": "otg5.subgraph/interface/plan",
        "target": "navigation.control.trajectory_selection/TrajectorySelection/trajectory_primary"
      },
      {
        "source": "plan_to_under_dolly/Plan2Generator/plan",
        "target": "navigation.control.subgraph/interface/plan"
      },
      {
        "source": "plan_back_with_dolly/Plan2Generator/plan",
        "target": "navigation.control.subgraph/interface/plan"
      },
      {
        "source": "plan_to_out_dolly/Plan2Generator/plan",
        "target": "navigation.control.subgraph/interface/plan"
      },
      {
        "source": "goal_drive_to_dolly_dropoff/MapWaypointAsGoal/goal",
        "target": "navigation.subgraph/interface/goal"
      },
      {
        "source": "goal_drive_back_with_dolly/PoseAsGoal/goal",
        "target": "otg5.subgraph/interface/goal"
      },
      {
        "source": "goal_drive_back_with_dolly/PoseAsGoal/goal",
        "target": "navigation.subgraph/interface/goal"
      },
      {
        "source": "goal_drive_out_from_under_dolly/PoseAsGoal/goal",
        "target": "otg5.subgraph/interface/goal"
      },
      {
        "source": "goal_drive_out_from_under_dolly/PoseAsGoal/goal",
        "target": "navigation.subgraph/interface/goal"
      },
      {
        "source": "goal_drive_home/MapWaypointAsGoal/goal",
        "target": "navigation.subgraph/interface/goal"
      },
      {
        "source": "navigation.planner.global_plan_smoother/smoother/smooth_plan",
        "target": "interface/subgraph/smooth_plan"
      },
      {
        "source": "navigation.control.lqr/isaac.lqr.DifferentialBaseLqrPlanner/plan",
        "target": "interface/subgraph/plan"
      },
      {
        "source": "lift_command/DifferentialBaseControlGenerator/command",
        "target": "interface/subgraph/lift_command"
      },
      {
        "source": "drop_command/DifferentialBaseControlGenerator/command",
        "target": "interface/subgraph/lift_command"
      }
    ]
  },
  "config": {
    "navigation.localization.viewers": {
      "disable_automatic_start": true
    },
    "navigation.planner.planner_switch_behavior": {
      "disable_automatic_start": true
    },
    "navigation.go_to.goal_monitor": {
      "GoalMonitor": {
        "arrived_position_thresholds": [0.1, 0.1],
        "stationary_speed_thresholds": [0.02, 0.05]
      }
    },
    "navigation.control.lqr_state_cost": {
      "SmoothMinimumBuilder": {
        "minimum_smoothing": 50.0,
        "component_names": [
          "$(fullname navigation.control.lqr_state_cost/ObstacleLocalMap)",
          "$(fullname navigation.control.lqr_state_cost/ObstacleRestrictedArea)",
          "$(fullname dolly_wheels_as_static_obstacle/wheel_1_cost)",
          "$(fullname dolly_wheels_as_static_obstacle/wheel_2_cost)",
          "$(fullname dolly_wheels_as_static_obstacle/wheel_3_cost)",
          "$(fullname dolly_wheels_as_static_obstacle/wheel_4_cost)"
        ]
      }
    },
    "navigation.control.lqr": {
      "isaac.lqr.DifferentialBaseLqrPlanner": {
        "plan_visualization_width": 0.3
      }
    },
    "navigation.shared_robot_model": {
      "SphericalRobotShapeComponent": {
        "smooth_minimum": 100.0,
        "circles": [
          { "center": [-0.745, 0.0], "radius": 0.315},
          { "center": [-0.485, 0.0], "radius": 0.315},
          { "center": [-0.20,  0.0], "radius": 0.315},
          { "center": [ 0.075, 0.0], "radius": 0.315},
          { "center": [-0.955,  0.21], "radius": 0.105},
          { "center": [-0.955, -0.21], "radius": 0.105},
          { "center": [ 0.285,  0.21], "radius": 0.105},
          { "center": [ 0.285, -0.21], "radius": 0.105}
        ]
      }
    },
    "navigation.sight_widgets": {
      "Planner View": {
        "type": "2d",
        "channels": [
          { "name": "$(fullname navigation.local_map.inpainted_egm_viewer/EvidenceGridMapViewer/egm)" },
          { "name": "$(fullname navigation.go_to.goal_viewer/GoalViewer/goal)" },
          { "name": "$(fullname navigation.planner.global_plan_smoother/smoother/smooth_plan.path)" },
          { "name": "$(fullname navigation.localization.viewers/RobotViewer/robot_model)" },
          { "name": "$(fullname navigation.localization.viewers/PoseTrailViewer/pose_trail)" },
          { "name": "$(fullname dolly_wheels_as_static_obstacle/wheel_1/obstacle)" },
          { "name": "$(fullname dolly_wheels_as_static_obstacle/wheel_2/obstacle)" },
          { "name": "$(fullname dolly_wheels_as_static_obstacle/wheel_3/obstacle)" },
          { "name": "$(fullname dolly_wheels_as_static_obstacle/wheel_4/obstacle)" },
          { "name": "$(fullname navigation.control.lqr/isaac.lqr.DifferentialBaseLqrPlanner/plan)" },
          { "name": "$(fullname detections_filter/Detections3Filter/roi_2D)" },
          {
            "name": "$(fullname otg5.dual_otg5/DualOtg5/path)",
            "size": 4.0
          }
        ]
      }
    },
    "detection_pose_estimation.sight_widgets": {
      "Pose Estimation": {
        "enabled": false
      }
    },
    "roi_pose_initializer": {
      "PoseInitializer": {
        "lhs_frame": "robot",
        "rhs_frame": "roi_center",
        "pose": {
          "translation": [3.0, 0.0, 0.0],
          "rotation": {
            "yaw_degrees": 180.0
          }
        }
      }
    },
    "drive_under_dolly_pose_initializer": {
      "PoseInitializer": {
        "lhs_frame": "dolly",
        "rhs_frame": "under_dolly",
        "pose": {
          "translation": [-0.25, 0.0, 0.0],
          "rotation": {
            "yaw_degrees": 180.0
          }
        }
      }
    },
    "drive_out_dolly_pose_initializer": {
      "PoseInitializer": {
        "lhs_frame": "dolly",
        "rhs_frame": "out_dolly",
        "pose": {
          "translation": [1.75, 0.0, 0.0],
          "rotation": {
            "yaw_degrees": 180.0
          }
        }
      }
    },
    "sequence_behavior": {
      "NodeGroup": {
        "node_names": [
          "$(fullname delivery_mission)",
          "$(fullname drive_home)"
        ]
      }
    },
    "delivery_mission": {
      "NodeGroup": {
        "node_names": [
          "$(fullname config_without_dolly)",
          "$(fullname approach_dolly_pickup)",
          "$(fullname detect_dolly)",
          "$(fullname config_before_docking)",
          "$(fullname drive_under_dolly)",
          "$(fullname lift_dolly)",
          "$(fullname config_with_dolly)",
          "$(fullname config_after_docking)",
          "$(fullname dolly_pose_on_robot)",
          "$(fullname drive_back_with_dolly_pose_initializer)",
          "$(fullname drive_back_with_dolly_pose_in_world)",
          "$(fullname drive_back_with_dolly)",
          "$(fullname drive_back_with_dolly_pose_in_dolly)",
          "$(fullname drive_to_dolly_dropoff)",
          "$(fullname config_before_undocking)",
          "$(fullname drop_dolly)",
          "$(fullname config_without_dolly)",
          "$(fullname dolly_pose_in_world)",
          "$(fullname drive_out_from_under_dolly)",
          "$(fullname config_after_undocking)",
          "$(fullname remove_dolly)"
        ]
      }
    },
    "config_without_dolly": {
      "NodeGroup": {
        "node_names": [
          "$(fullname config_for_planner_graph_without_dolly)",
          "$(fullname config_for_robot_shape_without_dolly)"
        ]
      }
    },
    "config_before_docking": {
      "ConfigLoader": {
        "config": {
          "delivery.navigation.control.trajectory_validation": {
            "CollisionCheck": {
              "disable_check": true
            }
          },
          "delivery.navigation.planner.pose2_graph_planner": {
            "Pose2GraphPlanner": {
              "model_error_margin": 0.0
            }
          },
          "delivery.navigation.control.state_validation": {
            "CollisionCheck": {
              "disable_check": true
            }
          },
          "delivery.navigation.control.lqr": {
            "isaac.lqr.DifferentialBaseLqrPlanner": {
              "use_adaptive_num_controls": true,
              "min_num_controls": 10,
              "gain_to_end_position_y": 20.0,
              "static_frame": "odom"
            }
          },
          "delivery.navigation.control.lqr_state_cost": {
            "DistanceQuadraticCostBuilder": {
              "costs": [[500, 0.05, 0.0],[1, 0.1, 0.5]]
            }
          },
          "delivery.navigation.obstacle_atlas": {
            "obstacle_atlas": {
              "static_frame": "odom"
            }
          }
        }
      }
    },
    "config_before_undocking": {
      "ConfigLoader": {
        "config": {
          "delivery.navigation.control.trajectory_validation": {
            "CollisionCheck": {
              "disable_check": true
            }
          },
          "delivery.navigation.control.state_validation": {
            "CollisionCheck": {
              "disable_check": true
            }
          }
        }
      }
    },
    "config_after_docking": {
      "ConfigLoader": {
        "config": {
          "delivery.navigation.control.trajectory_validation": {
            "CollisionCheck": {
              "disable_check": false
            }
          },
          "delivery.navigation.planner.pose2_graph_planner": {
            "Pose2GraphPlanner": {
              "model_error_margin": 0.05
            }
          },
          "delivery.navigation.control.state_validation": {
            "CollisionCheck": {
              "disable_check": false
            }
          },
          "delivery.navigation.control.lqr": {
            "isaac.lqr.DifferentialBaseLqrPlanner": {
              "use_adaptive_num_controls": false,
              "gain_to_end_position_y": 50.0,
              "static_frame": "world"
            }
          },
          "delivery.navigation.control.lqr_state_cost": {
            "DistanceQuadraticCostBuilder": {
              "costs": [[500, 0.1, 0.0],[1, 0.25, 0.5]]
            }
          },
          "delivery.navigation.obstacle_atlas": {
            "obstacle_atlas": {
              "static_frame": "world"
            }
          }
        }
      }
    },
    "config_after_undocking": {
      "ConfigLoader": {
        "config": {
          "delivery.navigation.control.trajectory_validation": {
            "CollisionCheck": {
              "disable_check": false
            }
          },
          "delivery.navigation.control.state_validation": {
            "CollisionCheck": {
              "disable_check": false
            }
          }
        }
      }
    },
    "approach_dolly_pickup": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname navigation.go_to.go_to_behavior)",
          "$(fullname goal_approach_dolly_pickup)",
          "$(fullname detection_pose_estimation.viewers)",
          "$(fullname detection_pose_estimation.object_detection.detection_viewer)",
          "$(fullname navigation.localization.viewers)",
          "$(fullname navigation.planner.planner_switch_behavior)",
          "$(fullname navigation.control.navigation_mode)"
        ]
      }
    },
    "goal_approach_dolly_pickup": {
      "MapWaypointAsGoal": {
        "waypoint": "pickup_face_dolly_8",
        "tick_period": "250ms"
      }
    },
    "detect_dolly": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname detections_filter)",
          "$(fullname detections_to_pose_tree)",
          "$(fullname detection_timer)",
          "$(fullname detection_pose_estimation.object_detection.detection_viewer)",
          "$(fullname target_dolly_viewer)",
          "$(fullname navigation.localization.viewers)"
        ]
      }
    },
    "detections_filter": {
      "Detections3Filter": {
        "roi_frame": "roi_center",
        "detection_frame": "camera",
        "threshold_translation": [1.5, 1.5, 0.5],
        "threshold_rotation": [0.75, 0.75, 0.75]
      }
    },
    "detections_to_pose_tree": {
      "DetectionsToPoseTree": {
        "report_success": true,
        "reference_frame": "odom",
        "detection_frame": "camera"
      }
    },
    "detection_pose_estimation.viewers": {
      "disable_automatic_start": true,
      "Detections3Viewer": {
        "detections_color": [190, 190, 190]
      }
    },
    "target_dolly_viewer": {
      "ObjectViewer": {
        "tick_period": "100Hz",
        "frame": "dolly",
        "bounding_box": {
          "center": [0.0, 0.0, 0.375],
          "dimensions": [0.9, 1.32, 0.25]
        }
      }
    },
    "detection_timer": {
      "TimerBehavior": {
        "status": "failure",
        "delay": 5.0
      }
    },
    "drive_under_dolly": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname navigation.go_to.go_to_behavior)",
          "$(fullname goal_drive_under_dolly)",
          "$(fullname target_dolly_viewer)",
          "$(fullname dolly_wheels_as_static_obstacle)",
          "$(fullname navigation.localization.viewers)",
          "$(fullname plan_to_under_dolly)",
          "$(fullname navigation.control.navigation_mode)"
        ]
      }
    },
    "goal_drive_under_dolly": {
      "PoseAsGoal": {
        "goal_frame": "under_dolly",
        "tick_period": "250ms"
      }
    },
    "plan_to_under_dolly": {
      "Plan2Generator": {
        "frames": ["under_dolly"],
        "plan_frame": "odom",
        "static_frame": "odom",
        "tick_period": "250ms"
      }
    },
    "dolly_wheels_as_static_obstacle": {
      "wheel_1": {
        "reference_frame": "dolly",
        "circle": { "center": [-0.35, -0.55], "radius": 0.1}
      },
      "wheel_2": {
        "reference_frame": "dolly",
        "circle": { "center": [-0.35, 0.55], "radius": 0.1}
      },
      "wheel_3": {
        "reference_frame": "dolly",
        "circle": { "center": [0.35, -0.55], "radius": 0.1}
      },
      "wheel_4": {
        "reference_frame": "dolly",
        "circle": { "center": [0.35, 0.55], "radius": 0.1}
      },
      "wheel_1_cost": {
        "obstacle_name": "$(fullname dolly_wheels_as_static_obstacle/wheel_1)"
      },
      "wheel_2_cost": {
        "obstacle_name": "$(fullname dolly_wheels_as_static_obstacle/wheel_2)"
      },
      "wheel_3_cost": {
        "obstacle_name": "$(fullname dolly_wheels_as_static_obstacle/wheel_3)"
      },
      "wheel_4_cost": {
        "obstacle_name": "$(fullname dolly_wheels_as_static_obstacle/wheel_4)"
      }
    },
    "lift_dolly": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname lift_command)",
          "$(fullname lift_timer)",
          "$(fullname navigation.localization.viewers)",
          "$(fullname navigation.planner.planner_switch_behavior)",
          "$(fullname navigation.control.navigation_mode)"
        ]
      }
    },
    "lift_command": {
      "DifferentialBaseControlGenerator": {
        "linear_speed": 1.0,
        "angular_speed": 0.0,
        "tick_period": "100Hz"
      }
    },
    "config_with_dolly": {
      "NodeGroup": {
        "node_names": [
          "$(fullname config_for_planner_graph_with_dolly)",
          "$(fullname config_for_robot_shape_with_dolly)"
        ]
      }
    },
    "config_for_robot_shape_with_dolly": {
      "ConfigLoader": {
        "config": {
          "delivery.navigation.shared_robot_model": {
            "SphericalRobotShapeComponent": {
              "circles": [
                { "center": [-0.745, 0.0], "radius": 0.315},
                { "center": [-0.485, 0.0], "radius": 0.315},
                { "center": [-0.20,  0.0], "radius": 0.315},
                { "center": [ 0.075, 0.0], "radius": 0.315},
                { "center": [-0.955,  0.21], "radius": 0.105},
                { "center": [-0.955, -0.21], "radius": 0.105},
                { "center": [ 0.285,  0.21], "radius": 0.105},
                { "center": [ 0.285, -0.21], "radius": 0.105},

                { "center": [-0.25,  0.115], "radius": 0.6},
                { "center": [-0.25, -0.115], "radius": 0.6},
                { "center": [-0.7,  0.565], "radius": 0.2},
                { "center": [-0.7, -0.565], "radius": 0.2},
                { "center": [ 0.2,  0.565], "radius": 0.2},
                { "center": [ 0.2, -0.565], "radius": 0.2}
              ]
            }
          },
          "delivery.navigation.local_map.evidence_map_postprocessing": {
            "isaac.egm_fusion.EvidenceMapInpaint": {
              "rectangles": [[[-1.06, 0.39], [-0.315, 0.315]], [[-0.9, 0.4], [-0.8, 0.8]]]
            }
          }
        }
      }
    },
    "dolly_pose_on_robot": {
      "PoseTreeRelink": {
        "current_lhs_frame": "odom",
        "desired_lhs_frame": "robot",
        "rhs_frame": "dolly"
      }
    },
    "drive_back_with_dolly_pose_initializer": {
      "PoseInitializer": {
        "report_success": true,
        "lhs_frame": "dolly",
        "rhs_frame": "back_with_dolly",
        "pose": {
          "translation": [1.75, 0.0, 0.0],
          "rotation": {
            "yaw_degrees": 180.0
          }
        }
      }
    },
    "drive_back_with_dolly_pose_in_world": {
      "PoseTreeRelink": {
        "current_lhs_frame": "dolly",
        "desired_lhs_frame": "odom",
        "rhs_frame": "back_with_dolly"
      }
    },
    "drive_back_with_dolly": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname navigation.go_to.go_to_behavior)",
          "$(fullname goal_drive_back_with_dolly)",
          "$(fullname navigation.localization.viewers)",
          "$(fullname plan_back_with_dolly)",
          "$(fullname navigation.control.control)",
          "$(fullname otg5.otg5_straight_behavior)"
        ]
      }
    },
    "goal_drive_back_with_dolly": {
      "PoseAsGoal": {
        "goal_frame": "back_with_dolly",
        "tick_period": "250ms"
      }
    },
    "plan_back_with_dolly": {
      "Plan2Generator": {
        "frames": ["back_with_dolly"],
        "plan_frame": "odom",
        "static_frame": "odom",
        "tick_period": "250ms"
      }
    },
    "drive_back_with_dolly_pose_in_dolly": {
      "PoseTreeRelink": {
        "current_lhs_frame": "odom",
        "desired_lhs_frame": "dolly",
        "rhs_frame": "back_with_dolly"
      }
    },
    "drive_to_dolly_dropoff": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname navigation.go_to.go_to_behavior)",
          "$(fullname goal_drive_to_dolly_dropoff)",
          "$(fullname navigation.localization.viewers)",
          "$(fullname navigation.planner.planner_switch_behavior)",
          "$(fullname navigation.control.navigation_mode)"
        ]
      }
    },
    "goal_drive_to_dolly_dropoff": {
      "MapWaypointAsGoal": {
        "waypoint": "dropoff_9",
        "tick_period": "250ms"
      }
    },
    "drop_dolly": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname drop_command)",
          "$(fullname drop_timer)",
          "$(fullname navigation.localization.viewers)",
          "$(fullname navigation.planner.planner_switch_behavior)",
          "$(fullname navigation.control.navigation_mode)"
        ]
      }
    },
    "drop_command": {
      "DifferentialBaseControlGenerator": {
        "linear_speed": -1.0,
        "angular_speed": 0.0,
        "tick_period": "100Hz"
      }
    },
    "config_for_robot_shape_without_dolly": {
      "ConfigLoader": {
        "config": {
          "delivery.navigation.shared_robot_model": {
            "SphericalRobotShapeComponent": {
              "circles": [
                { "center": [-0.745, 0.0], "radius": 0.315},
                { "center": [-0.485, 0.0], "radius": 0.315},
                { "center": [-0.20,  0.0], "radius": 0.315},
                { "center": [ 0.075, 0.0], "radius": 0.315},
                { "center": [-0.955,  0.21], "radius": 0.105},
                { "center": [-0.955, -0.21], "radius": 0.105},
                { "center": [ 0.285,  0.21], "radius": 0.105},
                { "center": [ 0.285, -0.21], "radius": 0.105}
              ]
            }
          },
          "delivery.navigation.local_map.evidence_map_postprocessing": {
            "isaac.egm_fusion.EvidenceMapInpaint": {
              "rectangles": [[[-1.06, 0.39], [-0.315, 0.315]]]
            }
          }
        }
      }
    },
    "dolly_pose_in_world": {
      "PoseTreeRelink": {
        "current_lhs_frame": "robot",
        "desired_lhs_frame": "world",
        "rhs_frame": "dolly"
      }
    },
    "drive_out_from_under_dolly": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname navigation.go_to.go_to_behavior)",
          "$(fullname goal_drive_out_from_under_dolly)",
          "$(fullname dolly_wheels_as_static_obstacle)",
          "$(fullname navigation.localization.viewers)",
          "$(fullname plan_to_out_dolly)",
          "$(fullname navigation.control.control)",
          "$(fullname otg5.otg5_straight_behavior)"
        ]
      }
    },
    "remove_dolly": {
      "PoseTreeRemoveLink": {
        "lhs_frame": "world",
        "rhs_frame": "dolly"
      }
    },
    "goal_drive_out_from_under_dolly": {
      "PoseAsGoal": {
        "goal_frame": "out_dolly",
        "tick_period": "250ms"
      }
    },
    "plan_to_out_dolly": {
      "Plan2Generator": {
        "frames": ["out_dolly"],
        "plan_frame": "odom",
        "static_frame": "odom",
        "tick_period": "250ms"
      }
    },
    "drive_home": {
      "ParallelBehavior": {
        "success_threshold": 1
      },
      "NodeGroup": {
        "node_names": [
          "$(fullname navigation.go_to.go_to_behavior)",
          "$(fullname goal_drive_home)",
          "$(fullname navigation.localization.viewers)",
          "$(fullname navigation.planner.planner_switch_behavior)",
          "$(fullname navigation.control.navigation_mode)"
        ]
      }
    },
    "goal_drive_home": {
      "MapWaypointAsGoal": {
        "waypoint": "robot_home",
        "tick_period": "250ms"
      }
    },
    "detection_pose_estimation.object_detection.detection_viewer": {
      "disable_automatic_start": true
    },
    "sight_widgets": {
      "Camera View": {
        "type": "2d",
        "channels": [
          {
            "name": "$(fullname detection_pose_estimation.object_detection.color_camera_visualizer/isaac.viewers.ImageViewer/image)"
          },
          {
            "name": "$(fullname detection_pose_estimation.viewers/Detections3Viewer/bounding_box)",
            "size": 1.5
          },
          {
            "name": "$(fullname detection_pose_estimation.object_detection.detection_viewer/isaac.viewers.DetectionsViewer/detections)"
          },
          {
            "name": "$(fullname target_dolly_viewer/ObjectViewer/bounding_box)",
            "size": 1.5
          },
          {
            "name": "$(fullname navigation.control.lqr/isaac.lqr.DifferentialBaseLqrPlanner/plan)"
          },
          {
            "name": "$(fullname navigation.local_map.binary_map_viewer/BinaryMapViewer/stencils)"
          },
          {
            "name": "$(fullname detections_filter/Detections3Filter/roi_2D)"
          }
        ]
      }
    },
    "navigation.control.navigation_mode": {
      "disable_automatic_start": true
    },
    "otg5.rotate_translate_rotate_state_machine": {
      "RotateTranslateRotateStateMachine": {
        "rotate_in_translation_state": false,
        "drive_backward": true
      }
    },
    "otg5.obstacle_delta_limiter": {
      "ObstacleDeltaLimiter": {
        "minimum_distance": 0.0,
        "desired_distance": 0.0
      }
    },
    "otg5.goal_to_delta": {
      "GoalToDelta": {
        "static_frame": "odom"
      }
    },
    "otg5.dual_otg5": {
      "DualOtg5": {
        "static_frame": "odom",
        "linear_minimum_allowed_speed": -0.5,
        "linear_minimum_desired_speed": -0.25
      }
    },
    "navigation.planner.pose2_graph_planner": {
      "Pose2GraphPlanner": {
        "model_error_margin": 0.05
      }
    },
    "navigation.control.trajectory_validation": {
      "FeasibilityCheck": {
        "limit_pos_y": 0.05
      }
    },
    "navigation.localization.global_localization": {
      "GridSearchLocalizer": {
        "flatscan_frames": ["lidar", "lidar_2"],
        "flatscan_channel_names": ["flatscan", "flatscan_2"]
      }
    }
  }
}
